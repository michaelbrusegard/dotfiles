(defcfg
  process-unmapped-keys yes
)

(defsrc
  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10   f11   f12
  caps a s d f j k l ; ' [ e
  fn sft alt
)

(defvar
  tap-time 150
  hold-time 200
)

(defalias
  escctrl (tap-hold 100 100 esc lctl)
  a (tap-hold $tap-time $hold-time a lctl)
  s (tap-hold $tap-time $hold-time s lalt)
  d (tap-hold $tap-time $hold-time d lsft)
  f (tap-hold $tap-time $hold-time f lmet)
  j (tap-hold $tap-time $hold-time j rmet)
  k (tap-hold $tap-time $hold-time k rsft)
  l (tap-hold $tap-time $hold-time l ralt)
  ; (tap-hold $tap-time $hold-time ; rctl)
  fnl (tap-hold 200 200 fn (layer-toggle fn))

  å (multi (release-key alt) (unicode å))
  æ (multi (release-key alt) (unicode æ))
  ø (multi (release-key alt) (unicode ø))
  é (multi (release-key alt) (unicode é))
  Å (multi (release-key alt) (release-key sft) (unicode Å))
  Æ (multi (release-key alt) (release-key sft) (unicode Æ))
  Ø (multi (release-key alt) (release-key sft) (unicode Ø))
  É (multi (release-key alt) (release-key sft) (unicode É))
  alt (multi alt (layer-while-held alted-with-exceptions))
  sft-alt (multi sft (layer-while-held alted-with-exceptions-shifted))
)

(deflayer base
  brdn  brup  _    _    _    _   prev  pp  next  mute  vold  volu
  @escctrl @a @s @d @f @j @k @l @; @' @[ e
  @fnl sft @alt
)

(deflayer fn
  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10   f11   f12
  @escctrl _ _ _ _ _ _ _ _ _ _ _
  fn sft @alt
)

(deflayer alted-with-exceptions
  _ _ _ _ _ _ _ _ _ _ _ _
  @escctrl _ _ @å @æ @ø @é _ _ _ _ _
  _ @sft-alt _
)

(deflayer alted-with-exceptions-shifted
  _ _ _ _ _ _ _ _ _ _ _ _
  @escctrl _ _ @Å @Æ @Ø @É _ _ _ _ _
  _ _ _
)
